/* The file contains an example of syllogism(三段论). It turns out that It just 
takes 10% of typing(only ~10 lines) compared with using other formal languages 
like lean4. Code explanation is in syllogism.litex .*/

// Comparison between LiTeX and Lean4: LiTeX is much simpler and more 
straightforward.

// LiTeX version
def human(something);
def mortal(something);
know if x: human(x) {mortal(x)};
let Socrates: Socrates is human;
Socrates is mortal;
if x: x is human {x is mortal};
let god: not god is mortal;
prove_by_contradiction not human(god) {
  god is mortal;
} god is mortal;

// Lean4 version
/*
// Unlike Lean4, a variable(symbol) in LiTeX can has many properties instead of
// just one type. LiTeX separates concept declaration with variable declaration.
// Concepts like "human", "mortal" are defined by def, variables like "Socrates"
// is declared by let.
variable (Human : Type)
variable (Mortal : Human → Prop)
variable (Socrates : Human)

// LiTeX has a declarative syntax which saves you from "naming a fact so that I 
// can use that later to prove further results".
// They do not need to "tell" my interpreter which facts
// are used to prove the fact.
// That is why they do not need to give a name to every fact they got because
// the only reason why naming a fact is necessary in languages like lean4 is
// telling the interpreter which fact to use, and that is redundant in LiTeX
// because LiTeX automatically checks an expression.
// For example: "theorem socrates_is_mortal",
// "apply all_humans_are_mortal" are unnecessary.
// Also, "#check" is unnecessary because any expression that does not start 
// with a LiTeX keyword is by default "an expression to be checked".
// In short, a simple expression "Socrates is mortal" in LiTeX has many
// effects: 1. LiTeX searches facts base to check whether it's true based on
// tree search 2. If it's true, then this expression itself is stored as a 
// new fact. 

axiom all_humans_are_mortal : ∀ (x : Human), Mortal x
theorem socrates_is_mortal : Mortal Socrates := by
  apply all_humans_are_mortal
#check socrates_is_mortal

// Because LiTeX saves you from "naming a fact so that I can use that later to
// prove further results", LiTeX is much shorter and more concise than Lean4.

def all_humans_will_die : Prop := ∀ (x : Human), Mortal x
theorem prove_all_humans_will_die : all_humans_will_die := all_humans_are_mortal
#check prove_all_humans_will_die
variable (God : Type)
variable (god : God)
axiom god_is_immortal : ¬ Mortal God
theorem god_is_not_human : God ≠ Human :=
  by
  intro h
  have god_is_mortal : Mortal God := all_humans_are_mortal god,
  contradiction

*/

